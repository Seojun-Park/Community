type User {
  id: ID! @id
  avatar: String @default(value: "https://i.pinimg.com/originals/2c/1d/13/2c1d13d7fa21db9ae2adfa245d778e1f.jpg")
  email: String! @unique
  firstName: String
  lastName: String
  username: String! @unique
  intro: String
  posts: [Post!]! @relation(name:"PostsOfUser", onDelete: CASCADE)
  boards:[Board!]! @relation(name:"BoardsOfUser", onDelete: CASCADE)
  markets:[Market!]! @relation(name:"MarketsOfUser", onDelete: CASCADE)
  rents:[Rent!]! @relation(name:"RentsOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentsOfUser", onDelete: CASCADE)
  meets:[Meet!]! @relation(name:"MeetsOfUser", onDelete: CASCADE)
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  rooms: [Room!]!
  schedules: [Schedule!] @relation(name: "SchedulesOfUser", onDelete:CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id
  user: User! @relation(name:"PostsOfUser")
  notices: [Notice!]
  markgets: [Market!]
  boards: [Board!]
  rents: [Rent!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Notice {
  id: ID! @id
  user: User!
  title: String!
  caption: String!
  comments: [Comment!]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt 
}

type Market {
  id: ID! @id
  user: User! @relation(name:"MarketsOfUser")
  title: String!
  caption: String!
  status: String!
  price: String!
  thumbnail: String @default(value:"https://images.unsplash.com/photo-1566576721346-d4a3b4eaeb55?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=802&q=80")
  images: [Image!] @relation(name: "ImagesOfMarket", onDelete: CASCADE)
  comments: [Comment!] @relation(name:"CommentsOfMarket", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt 
}

type Rent {
  id: ID! @id
  user: User! @relation(name:"RentsOfUser")
  title: String!
  caption: String!
  status: String!
  comments: [Comment!] @relation(name:"CommentsOfRent", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt 
}

type Board {
  id: ID! @id
  user: User! @relation(name:"BoardsOfUser")
  title: String!
  caption: String!
  status: String!
  comments: [Comment!]! @relation(name:"CommentsOfBoard", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt 
}

type Image{
  id: ID! @id
  url: String! 
  meet: Meet @relation(name: "ImagesOfMeet")
  market: Market @relation(name: "ImagesOfMarket")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name:"CommentsOfUser")
  board: Board @relation(name:"CommentsOfBoard")
  market: Market @relation(name:"CommentsOfMarket")
  rent: Rent @relation(name:"CommentsOfRent")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Meet {
  id: ID! @id
  intro: String!
  title: String!
  creator: String
  location: String
  date: String!
  time: String!
  isPublic: Boolean!
  member: Int
  thumbnail: String @default(value:"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2089&q=80")
  theme: String!
  participants: [User!]! @relation(name:"MeetsOfUser")
  images: [Image!] @relation(name: "ImagesOfMeet", onDelete:CASCADE)
  tags: [Tag!] @relation(link: TABLE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Tag{
  id: ID! @id
  title: String!
  meets: [Meet!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Schedule{
  id: ID! @id
  user: User! @relation(name: "SchedulesOfUser")
  date: String!
  todo: String!
  tag: String
  isOn: Boolean!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}